---
# tasks file for system-collector for debian/ubuntu hosts

- name: Creating output directory
  local_action: file path=output/{{ inventory_hostname }} state=directory
  become: no

- name: Gathering installed packages
  shell: dpkg -l | awk 'BEGIN{print "Name,Version"}; FNR>5 {print $2","$3}'
  register: installed_packages
- name: Saving installed packages
  local_action: copy content={{ installed_packages.stdout }} dest=output/{{ inventory_hostname }}/installed_packages.csv
  become: no
# - debug: 
#     var: installed_packages.stdout 

- name: Gathering firewall rules
  shell: iptables -Lv | true
  register: firewall_rules
- name: Saving firewall rules
  local_action: copy content={{ firewall_rules.stdout }} dest=output/{{ inventory_hostname }}/firewall_rules.txt
  become: no
# - debug: 
#     var: firewall_rules.stdout 

- name: Gathering services
  shell: service --status-all | sed 's/\[ + \]/Running/; s/\[ - \]/Stopped/; s/\[ \? \]/Upstart/;' | awk 'BEGIN{print "Name,Status"}; {print $2","$1}'
  args:
    warn: false
  register: services
- name: Saving services
  local_action: copy content={{ services.stdout }} dest=output/{{ inventory_hostname }}/services.csv
  become: no
# - debug: 
#     var: services.stdout 

- name: Ensuring lsof installed on the target system
  package:
    name: lsof
    state: present
- name: Gathering open ports
  shell: lsof -iTCP -P -n | grep LISTEN | awk '{print $1","$3","$8","$9}'
  register: open_ports
- name: Saving open ports
  local_action: copy content={{ open_ports.stdout }} dest=output/{{ inventory_hostname }}/open_ports.csv
  become: no
# - debug: 
#     var: open_ports.stdout 

- name: Gathering connected networks
  shell: ip addr | grep "inet " | awk 'BEGIN{print "Networks"}; {print $2}'
  register: connected_networks
- name: Saving connected networks
  local_action: copy content={{ connected_networks.stdout }} dest=output/{{ inventory_hostname }}/connected_networks.csv
  become: no
# - debug: 
#     var: connected_networks.stdout 

- name: Gathering routing table
  shell: route -n | awk 'FNR>1 {print $1","$2","$3}'
  register: routing_table
- name: Saving routing table
  local_action: copy content={{ routing_table.stdout }} dest=output/{{ inventory_hostname }}/routing_table.csv
  become: no
# - debug: 
#     var: routing_table.stdout 

- name: Gathering syslog
  command: tail -n 10 /var/log/syslog
  register: syslog 
- name: Saving syslog
  local_action: copy content={{ syslog.stdout }} dest=output/{{ inventory_hostname }}/syslog.txt
  become: no
# - debug: 
#     var: syslog.stdout 
